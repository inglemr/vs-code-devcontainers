
version: '3.7'

services:
  vscode:
    build: .
    image: godevcontainer
    volumes:
      - ../:/workspace
      # Docker
      - ~/.docker:/root/.docker:z
      # Docker socket to access Docker server
      - /var/run/docker.sock:/var/run/docker.sock
      # SSH directory for Linux, OSX and WSL
      - ~/.ssh:/root/.ssh:z
      # For Windows without WSL, a copy will be made
      # from /tmp/.ssh to ~/.ssh to fix permissions
      # - ~/.ssh:/tmp/.ssh:ro
      # Shell history persistence
      - ~/.zsh_history:/root/.zsh_history:z
      # Git config
      - ~/.gitconfig:/root/.gitconfig:z
      # Kubernetes
      - ~/.kube:/root/.kube:z
    environment:
      EVENT_STREAM_KAFKA_HOST: "kafka:9092"
    entrypoint: zsh -c "while sleep 1000; do :; done"
  zoo1:
    image: zookeeper:3.4.9
    hostname: zoo1
    ports:
      - "2181:2181"
    environment:
      ZOO_MY_ID: 1
      ZOO_PORT: 2181
      ZOO_SERVERS: server.1=zoo1:2888:3888
    volumes:
      - kafka-data:/data
      - kafka-data:/datalog
  # see https://github.com/confluentinc/kafka-images/tree/master/examples/kafka-cluster-sasl
  kafka:
    image: confluentinc/cp-kafka:6.1.1
    restart: always
    hostname: kafka
    ports:
      - "9092:9092"
      - "9999:9999"
    environment:
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
      #KAFKA_ADVERTISED_LISTENERS: LISTENER_DOCKER_INTERNAL://kafka:19092,LISTENER_DOCKER_EXTERNAL://${DOCKER_HOST_IP:-127.0.0.1}:9092
      # KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_DOCKER_INTERNAL:PLAINTEXT,LISTENER_DOCKER_EXTERNAL:PLAINTEXT
      # KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_DOCKER_INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zoo1:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_JMX_PORT: 9999
      KAFKA_SOCKET_REQUEST_MAX_BYTES: 2000000000
      KAFKA_JMX_HOSTNAME: ${DOCKER_HOST_IP:-127.0.0.1}
      KAFKA_LISTENERS: 'PLAINTEXT://kafka:9092'
      KAFKA_ADVERTISED_LISTENERS: 'PLAINTEXT://kafka:9092'
    volumes:
      - kafka-data:/var/lib/kafka/data
      - /var/run/docker.sock:/var/run/docker.sock
      - ./kafka/secrets:/etc/kafka/secrets
    depends_on:
      - zoo1
  kafka-topics-ui:
    restart: always
    image: landoop/kafka-topics-ui:0.9.3
    hostname: kafka-topics-ui
    ports:
      - "8000:8000"
    environment:
      # Required. Instructs the UI where it can find the Kafka REST Proxy.
      KAFKA_REST_PROXY_URL: "http://kafka-rest-proxy:8082/"
      # This instructs the docker image to use Caddy to proxy traffic to kafka-topics-ui.
      PROXY: "true"
    depends_on:
      - kafka-rest-proxy


  kafka-rest-proxy:
    restart: always
    image: confluentinc/cp-kafka-rest:4.1.0
    hostname: kafka-rest-proxy
    ports:
      - "8082:8082"
    environment:
      # Specifies the ZooKeeper connection string. This service connects
      # to ZooKeeper so that it can broadcast its endpoints as well as
      # react to the dynamic topology of the Kafka cluster.
      KAFKA_REST_ZOOKEEPER_CONNECT: zoo1:2181
      # The address on which Kafka REST will listen for API requests.
      KAFKA_REST_LISTENERS: http://0.0.0.0:8082/
      # The base URL for Schema Registry that should be used by the Avro serializer.
      #KAFKA_REST_SCHEMA_REGISTRY_URL: http://schema-registry:8081/
      KAFKA_REST_HOST_NAME: kafka-rest-proxy
      KAFKA_REST_BOOTSTRAP_SERVERS: kafka:9092
    depends_on:
      - zoo1
      - kafka

volumes:
  kafka-data: